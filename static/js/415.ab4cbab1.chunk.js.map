{"version":3,"file":"static/js/415.ab4cbab1.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","color","concat","capitalize","_ref","_ref2","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","clsx","getFormControlLabelUtilityClasses","FormControlLabelRoot","formControlLabelClasses","label","labelPlacement","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","_slotProps$typography","_props$componentsProp","componentsProps","control","disabledProp","disableTypography","labelProp","_props$labelPlacement","_props$slotProps","slotProps","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","error","typographySlotProps","typography","Typography","component","children","_jsxs","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","SwitchBaseInput","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","checked","defaultChecked","_props$disableFocusRi","disableFocusRipple","_props$edge","id","inputRef","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","input","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target","_get","Reflect","get","bind","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","useConstant","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginBottom","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","find","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","push","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","_toArray","fillWildcardKeyframes","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","isZeroValueString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}