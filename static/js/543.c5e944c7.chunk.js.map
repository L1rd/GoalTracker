{"version":3,"file":"static/js/543.c5e944c7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","_ref","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","_props$disableFocusRi","disableFocusRipple","_props$edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","concat","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","indeterminate","color","_ref2","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","composedClasses","fontSize","_get","Reflect","get","bind","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","useConstant","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginBottom","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","find","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","push","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","_toArray","fillWildcardKeyframes","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","isZeroValueString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}